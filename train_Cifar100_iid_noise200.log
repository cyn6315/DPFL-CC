nohup: ignoring input
cuda:4
Namespace(batch_size=300, bn_sparsity=0.9, classes_per_user=20, clip_bound=1.8, clipping_style='all-layer', cluster_project_lr=0.04, cluster_temperature=1.0, dataset='CIFAR-100', dataset_dir='/home/chenyannan/fast-differential-privacy-main/examples/image_classification/data', downsample_lr=0.04, epochs=50, epsilon=8, feature_dim=128, global_lr=1, image_size=224, instance_project_lr=0.04, instance_temperature=0.5, kl_threshold=0.6, linear_sparsity=0.9, local_epoch=5, loss_KL=1, mini_bs=150, miu=1, model_path='save/Cifar-100-DPFL-ResNet18-client200-noise200', momentum=0.3, n_clients=200, num_class=20, r_conv=6, r_proj=16, reload=False, resnet='ResNet18_lora', resnet_lr=0.12, sample_ratio=1, seed=17, smooth_K=6, smooth_step=0, start_epoch=19, test_image_size=256, weight_decay=1e-05, workers=8)
save/Cifar-10-DPFL-ResNet18-blur-lus-kl-threshold-lorabegin/checkpoint_51.tar
save/Cifar-100-DPFL-ResNet18-client200
resnet.conv1.weight 9408 torch.Size([64, 3, 7, 7])
resnet.conv1.lora_A 882 torch.Size([42, 21])
resnet.conv1.lora_B 18816 torch.Size([448, 42])
resnet.bn1.weight 64 torch.Size([64])
resnet.bn1.bias 64 torch.Size([64])
resnet.layer1.0.conv1.weight 36864 torch.Size([64, 64, 3, 3])
resnet.layer1.0.conv1.lora_A 3456 torch.Size([18, 192])
resnet.layer1.0.conv1.lora_B 3456 torch.Size([192, 18])
resnet.layer1.0.bn1.weight 64 torch.Size([64])
resnet.layer1.0.bn1.bias 64 torch.Size([64])
resnet.layer1.0.conv2.weight 36864 torch.Size([64, 64, 3, 3])
resnet.layer1.0.conv2.lora_A 3456 torch.Size([18, 192])
resnet.layer1.0.conv2.lora_B 3456 torch.Size([192, 18])
resnet.layer1.0.bn2.weight 64 torch.Size([64])
resnet.layer1.0.bn2.bias 64 torch.Size([64])
resnet.layer1.1.conv1.weight 36864 torch.Size([64, 64, 3, 3])
resnet.layer1.1.bn1.weight 64 torch.Size([64])
resnet.layer1.1.bn1.bias 64 torch.Size([64])
resnet.layer1.1.conv2.weight 36864 torch.Size([64, 64, 3, 3])
resnet.layer1.1.bn2.weight 64 torch.Size([64])
resnet.layer1.1.bn2.bias 64 torch.Size([64])
resnet.layer2.0.conv1.weight 73728 torch.Size([128, 64, 3, 3])
resnet.layer2.0.conv1.lora_A 3456 torch.Size([18, 192])
resnet.layer2.0.conv1.lora_B 6912 torch.Size([384, 18])
resnet.layer2.0.bn1.weight 128 torch.Size([128])
resnet.layer2.0.bn1.bias 128 torch.Size([128])
resnet.layer2.0.conv2.weight 147456 torch.Size([128, 128, 3, 3])
resnet.layer2.0.conv2.lora_A 6912 torch.Size([18, 384])
resnet.layer2.0.conv2.lora_B 6912 torch.Size([384, 18])
resnet.layer2.0.bn2.weight 128 torch.Size([128])
resnet.layer2.0.bn2.bias 128 torch.Size([128])
resnet.layer2.0.downsample.0.weight 8192 torch.Size([128, 64, 1, 1])
resnet.layer2.0.downsample.0.lora_A 2304 torch.Size([36, 64])
resnet.layer2.0.downsample.0.lora_B 4608 torch.Size([128, 36])
resnet.layer2.0.downsample.1.weight 128 torch.Size([128])
resnet.layer2.0.downsample.1.bias 128 torch.Size([128])
resnet.layer2.1.conv1.weight 147456 torch.Size([128, 128, 3, 3])
resnet.layer2.1.bn1.weight 128 torch.Size([128])
resnet.layer2.1.bn1.bias 128 torch.Size([128])
resnet.layer2.1.conv2.weight 147456 torch.Size([128, 128, 3, 3])
resnet.layer2.1.bn2.weight 128 torch.Size([128])
resnet.layer2.1.bn2.bias 128 torch.Size([128])
resnet.layer3.0.conv1.weight 294912 torch.Size([256, 128, 3, 3])
resnet.layer3.0.conv1.lora_A 6912 torch.Size([18, 384])
resnet.layer3.0.conv1.lora_B 13824 torch.Size([768, 18])
resnet.layer3.0.bn1.weight 256 torch.Size([256])
resnet.layer3.0.bn1.bias 256 torch.Size([256])
resnet.layer3.0.conv2.weight 589824 torch.Size([256, 256, 3, 3])
resnet.layer3.0.conv2.lora_A 13824 torch.Size([18, 768])
resnet.layer3.0.conv2.lora_B 13824 torch.Size([768, 18])
resnet.layer3.0.bn2.weight 256 torch.Size([256])
resnet.layer3.0.bn2.bias 256 torch.Size([256])
resnet.layer3.0.downsample.0.weight 32768 torch.Size([256, 128, 1, 1])
resnet.layer3.0.downsample.0.lora_A 4608 torch.Size([36, 128])
resnet.layer3.0.downsample.0.lora_B 9216 torch.Size([256, 36])
resnet.layer3.0.downsample.1.weight 256 torch.Size([256])
resnet.layer3.0.downsample.1.bias 256 torch.Size([256])
resnet.layer3.1.conv1.weight 589824 torch.Size([256, 256, 3, 3])
resnet.layer3.1.conv1.lora_A 13824 torch.Size([18, 768])
resnet.layer3.1.conv1.lora_B 13824 torch.Size([768, 18])
resnet.layer3.1.bn1.weight 256 torch.Size([256])
resnet.layer3.1.bn1.bias 256 torch.Size([256])
resnet.layer3.1.conv2.weight 589824 torch.Size([256, 256, 3, 3])
resnet.layer3.1.conv2.lora_A 13824 torch.Size([18, 768])
resnet.layer3.1.conv2.lora_B 13824 torch.Size([768, 18])
resnet.layer3.1.bn2.weight 256 torch.Size([256])
resnet.layer3.1.bn2.bias 256 torch.Size([256])
resnet.layer4.0.conv1.weight 1179648 torch.Size([512, 256, 3, 3])
resnet.layer4.0.conv1.lora_A 13824 torch.Size([18, 768])
resnet.layer4.0.conv1.lora_B 27648 torch.Size([1536, 18])
resnet.layer4.0.bn1.weight 512 torch.Size([512])
resnet.layer4.0.bn1.bias 512 torch.Size([512])
resnet.layer4.0.conv2.weight 2359296 torch.Size([512, 512, 3, 3])
resnet.layer4.0.conv2.lora_A 27648 torch.Size([18, 1536])
resnet.layer4.0.conv2.lora_B 27648 torch.Size([1536, 18])
resnet.layer4.0.bn2.weight 512 torch.Size([512])
resnet.layer4.0.bn2.bias 512 torch.Size([512])
resnet.layer4.0.downsample.0.weight 131072 torch.Size([512, 256, 1, 1])
resnet.layer4.0.downsample.0.lora_A 9216 torch.Size([36, 256])
resnet.layer4.0.downsample.0.lora_B 18432 torch.Size([512, 36])
resnet.layer4.0.downsample.1.weight 512 torch.Size([512])
resnet.layer4.0.downsample.1.bias 512 torch.Size([512])
resnet.layer4.1.conv1.weight 2359296 torch.Size([512, 512, 3, 3])
resnet.layer4.1.conv1.lora_A 27648 torch.Size([18, 1536])
resnet.layer4.1.conv1.lora_B 27648 torch.Size([1536, 18])
resnet.layer4.1.bn1.weight 512 torch.Size([512])
resnet.layer4.1.bn1.bias 512 torch.Size([512])
resnet.layer4.1.conv2.weight 2359296 torch.Size([512, 512, 3, 3])
resnet.layer4.1.conv2.lora_A 27648 torch.Size([18, 1536])
resnet.layer4.1.conv2.lora_B 27648 torch.Size([1536, 18])
resnet.layer4.1.bn2.weight 512 torch.Size([512])
resnet.layer4.1.bn2.bias 512 torch.Size([512])
instance_projector.0.weight 262144 torch.Size([512, 512])
instance_projector.0.bias 512 torch.Size([512])
instance_projector.2.weight 65536 torch.Size([128, 512])
instance_projector.2.bias 128 torch.Size([128])
cluster_projector2.0.weight 262144 torch.Size([512, 512])
cluster_projector2.0.bias 512 torch.Size([512])
cluster_projector2.2.weight 10240 torch.Size([20, 512])
cluster_projector2.2.bias 20 torch.Size([20])
sigma: 3.67919921875
Number of total parameters:  12194886
Number of trainable p  arameters:  1027974
### Creating features from model ###
Step [0/200]	 Computing features...
Step [100/200]	 Computing features...
[ 1 18  5 ...  7  5 18] [10  9 11 ... 18 15  4]
Global  NMI = 0.2132 ARI = 0.0975 F = 0.1431 ACC = 0.2415
Norm:  tensor(0.9671, device='cuda:4')
Round:  19 User: 0 Train Loss: 7.443
Norm:  tensor(0.9777, device='cuda:4')
Round:  19 User: 1 Train Loss: 7.472
Norm:  tensor(0.9621, device='cuda:4')
Round:  19 User: 2 Train Loss: 7.440
Norm:  tensor(1.0306, device='cuda:4')
Round:  19 User: 3 Train Loss: 7.448
Norm:  tensor(0.9411, device='cuda:4')
Round:  19 User: 4 Train Loss: 7.376
Norm:  tensor(0.9446, device='cuda:4')
Round:  19 User: 5 Train Loss: 7.404
Norm:  tensor(0.9239, device='cuda:4')
Round:  19 User: 6 Train Loss: 7.408
Norm:  tensor(0.9424, device='cuda:4')
Round:  19 User: 7 Train Loss: 7.403
Norm:  tensor(0.9681, device='cuda:4')
Round:  19 User: 8 Train Loss: 7.467
Norm:  tensor(1.0193, device='cuda:4')
Round:  19 User: 9 Train Loss: 7.483
Norm:  tensor(0.9188, device='cuda:4')
Round:  19 User: 10 Train Loss: 7.408
Norm:  tensor(1.0073, device='cuda:4')
Round:  19 User: 11 Train Loss: 7.412
Norm:  tensor(1.0460, device='cuda:4')
Round:  19 User: 12 Train Loss: 7.459
Norm:  tensor(0.9948, device='cuda:4')
Round:  19 User: 13 Train Loss: 7.443
Norm:  tensor(1.0205, device='cuda:4')
Round:  19 User: 14 Train Loss: 7.461
Norm:  tensor(0.9847, device='cuda:4')
Round:  19 User: 15 Train Loss: 7.430
Norm:  tensor(1.0178, device='cuda:4')
Round:  19 User: 16 Train Loss: 7.436
Norm:  tensor(0.9746, device='cuda:4')
Round:  19 User: 17 Train Loss: 7.392
Norm:  tensor(0.9987, device='cuda:4')
Round:  19 User: 18 Train Loss: 7.482
Norm:  tensor(0.9343, device='cuda:4')
Round:  19 User: 19 Train Loss: 7.367
clip_bound 0.9787118613719941
count 20
updated norm:  tensor(0.3252, device='cuda:4')
*********Round:  19 Train Loss: 7.432
### Creating features from model ###
Step [0/200]	 Computing features...
Step [100/200]	 Computing features...
[ 1 18  5 ...  7  5 18] [ 6  9 11 ... 18 15  4]
Global  NMI = 0.2120 ARI = 0.1001 F = 0.1457 ACC = 0.2424
Norm:  tensor(1.0513, device='cuda:4')
Round:  20 User: 0 Train Loss: 7.493
Norm:  tensor(1.0186, device='cuda:4')
Round:  20 User: 1 Train Loss: 7.508
Norm:  tensor(1.0027, device='cuda:4')
Round:  20 User: 2 Train Loss: 7.460
Norm:  tensor(1.0535, device='cuda:4')
Round:  20 User: 3 Train Loss: 7.475
Norm:  tensor(0.9855, device='cuda:4')
Round:  20 User: 4 Train Loss: 7.407
Norm:  tensor(0.9811, device='cuda:4')
Round:  20 User: 5 Train Loss: 7.446
Norm:  tensor(0.9681, device='cuda:4')
Round:  20 User: 6 Train Loss: 7.427
Norm:  tensor(1.0208, device='cuda:4')
Round:  20 User: 7 Train Loss: 7.496
Norm:  tensor(0.9675, device='cuda:4')
Round:  20 User: 8 Train Loss: 7.465
Norm:  tensor(1.0763, device='cuda:4')
Round:  20 User: 9 Train Loss: 7.499
Norm:  tensor(0.9719, device='cuda:4')
Round:  20 User: 10 Train Loss: 7.399
Norm:  tensor(1.0571, device='cuda:4')
Round:  20 User: 11 Train Loss: 7.452
Norm:  tensor(1.0012, device='cuda:4')
Round:  20 User: 12 Train Loss: 7.466
Norm:  tensor(1.0248, device='cuda:4')
Round:  20 User: 13 Train Loss: 7.460
Norm:  tensor(1.0073, device='cuda:4')
Round:  20 User: 14 Train Loss: 7.448
Norm:  tensor(0.9908, device='cuda:4')
Round:  20 User: 15 Train Loss: 7.428
Norm:  tensor(1.1062, device='cuda:4')
Round:  20 User: 16 Train Loss: 7.485
Norm:  tensor(0.9752, device='cuda:4')
Round:  20 User: 17 Train Loss: 7.419
Norm:  tensor(1.0530, device='cuda:4')
Round:  20 User: 18 Train Loss: 7.487
Norm:  tensor(1.0106, device='cuda:4')
Round:  20 User: 19 Train Loss: 7.436
clip_bound 1.0161846727132797
count 20
updated norm:  tensor(0.3571, device='cuda:4')
*********Round:  20 Train Loss: 7.458
### Creating features from model ###
Step [0/200]	 Computing features...
Step [100/200]	 Computing features...
[ 1 18  5 ...  7  5 18] [10  9 11 ... 18  1  4]
Global  NMI = 0.2135 ARI = 0.1014 F = 0.1475 ACC = 0.2447
Norm:  tensor(1.1585, device='cuda:4')
Round:  21 User: 0 Train Loss: 7.527
Norm:  tensor(1.0725, device='cuda:4')
Round:  21 User: 1 Train Loss: 7.588
Norm:  tensor(1.0441, device='cuda:4')
Round:  21 User: 2 Train Loss: 7.492
Norm:  tensor(1.0588, device='cuda:4')
Round:  21 User: 3 Train Loss: 7.487
Norm:  tensor(1.0229, device='cuda:4')
Round:  21 User: 4 Train Loss: 7.446
Norm:  tensor(1.0353, device='cuda:4')
Round:  21 User: 5 Train Loss: 7.447
Norm:  tensor(0.9972, device='cuda:4')
Round:  21 User: 6 Train Loss: 7.494
Norm:  tensor(1.0399, device='cuda:4')
Round:  21 User: 7 Train Loss: 7.514
Norm:  tensor(1.0287, device='cuda:4')
Round:  21 User: 8 Train Loss: 7.527
Norm:  tensor(1.0487, device='cuda:4')
Round:  21 User: 9 Train Loss: 7.530
Norm:  tensor(0.9973, device='cuda:4')
Round:  21 User: 10 Train Loss: 7.455
Norm:  tensor(1.0617, device='cuda:4')
Round:  21 User: 11 Train Loss: 7.509
Norm:  tensor(1.0946, device='cuda:4')
Round:  21 User: 12 Train Loss: 7.491
Norm:  tensor(1.0648, device='cuda:4')
Round:  21 User: 13 Train Loss: 7.487
Norm:  tensor(1.0754, device='cuda:4')
Round:  21 User: 14 Train Loss: 7.477
Norm:  tensor(1.1046, device='cuda:4')
Round:  21 User: 15 Train Loss: 7.518
Norm:  tensor(1.0558, device='cuda:4')
Round:  21 User: 16 Train Loss: 7.468
Norm:  tensor(1.0901, device='cuda:4')
Round:  21 User: 17 Train Loss: 7.511
Norm:  tensor(1.1005, device='cuda:4')
Round:  21 User: 18 Train Loss: 7.487
Norm:  tensor(1.0524, device='cuda:4')
Round:  21 User: 19 Train Loss: 7.506
clip_bound 1.0601850301027298
count 20
updated norm:  tensor(0.3692, device='cuda:4')
*********Round:  21 Train Loss: 7.498
### Creating features from model ###
Step [0/200]	 Computing features...
Step [100/200]	 Computing features...
[ 1 18  5 ...  7  5 18] [10 12 11 ... 19 17  4]
Global  NMI = 0.2062 ARI = 0.0933 F = 0.1401 ACC = 0.2368
Norm:  tensor(1.0776, device='cuda:4')
Round:  22 User: 0 Train Loss: 7.485
Norm:  tensor(1.1164, device='cuda:4')
Round:  22 User: 1 Train Loss: 7.561
Norm:  tensor(1.0390, device='cuda:4')
Round:  22 User: 2 Train Loss: 7.462
Norm:  tensor(1.1874, device='cuda:4')
Round:  22 User: 3 Train Loss: 7.503
Norm:  tensor(1.0098, device='cuda:4')
Round:  22 User: 4 Train Loss: 7.441
Norm:  tensor(1.0575, device='cuda:4')
Round:  22 User: 5 Train Loss: 7.432
Norm:  tensor(1.0829, device='cuda:4')
Round:  22 User: 6 Train Loss: 7.495
Norm:  tensor(1.0833, device='cuda:4')
Round:  22 User: 7 Train Loss: 7.460
Norm:  tensor(1.0808, device='cuda:4')
Round:  22 User: 8 Train Loss: 7.538
Norm:  tensor(1.0668, device='cuda:4')
Round:  22 User: 9 Train Loss: 7.450
Norm:  tensor(1.0146, device='cuda:4')
Round:  22 User: 10 Train Loss: 7.482
Norm:  tensor(1.0999, device='cuda:4')
Round:  22 User: 11 Train Loss: 7.484
Norm:  tensor(1.1104, device='cuda:4')
Round:  22 User: 12 Train Loss: 7.502
Norm:  tensor(1.1340, device='cuda:4')
Round:  22 User: 13 Train Loss: 7.503
Norm:  tensor(1.1320, device='cuda:4')
Round:  22 User: 14 Train Loss: 7.524
Norm:  tensor(1.0840, device='cuda:4')
Round:  22 User: 15 Train Loss: 7.494
Norm:  tensor(1.1071, device='cuda:4')
Round:  22 User: 16 Train Loss: 7.538
Norm:  tensor(1.0150, device='cuda:4')
Round:  22 User: 17 Train Loss: 7.433
Norm:  tensor(1.1527, device='cuda:4')
Round:  22 User: 18 Train Loss: 7.578
Norm:  tensor(1.1276, device='cuda:4')
Round:  22 User: 19 Train Loss: 7.490
clip_bound 1.0889464497566224
count 20
updated norm:  tensor(0.4088, device='cuda:4')
*********Round:  22 Train Loss: 7.493
### Creating features from model ###
Step [0/200]	 Computing features...
Step [100/200]	 Computing features...
[ 1 18  5 ...  7  5 18] [10 12 11 ... 19 17  4]
Global  NMI = 0.2079 ARI = 0.0938 F = 0.1406 ACC = 0.2349
Norm:  tensor(1.0302, device='cuda:4')
Round:  23 User: 0 Train Loss: 7.505
